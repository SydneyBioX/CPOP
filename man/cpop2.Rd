% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpop2.R
\name{cpop2_sign}
\alias{cpop2_sign}
\alias{cpop2_mag}
\title{Step 2 of the CPOP method}
\usage{
cpop2_sign(
  z1,
  z2,
  y1,
  y2,
  family,
  cpop1_features,
  s = "lambda.min",
  nIter = 20,
  cpop2_break = TRUE,
  ...
)

cpop2_mag(
  z1,
  z2,
  y1,
  y2,
  family,
  cpop1_features,
  s = "lambda.min",
  nIter = 20,
  cpop2_break = FALSE,
  mag = 1,
  ...
)
}
\arguments{
\item{z1}{A data matrix}

\item{z2}{A data matrix}

\item{y1}{A vector}

\item{y2}{A vector}

\item{family}{see glmnet family}

\item{cpop1_features}{cpop1 result}

\item{s}{CV-Lasso lambda}

\item{nIter}{Number of iterations}

\item{cpop2_break}{Should cpop2 loop be broken the first time
differential betas are removed}

\item{...}{Extra parameter settings for cv.glmnet}

\item{mag}{a scaled threshold differential betas are removed}
}
\value{
A vector of features
}
\description{
Step 2 of the CPOP method based on sign

Step 2 of the CPOP method based on scaled magnitude
}
\examples{
data(cpop_data_binary, package = 'CPOP')
set.seed(1)
z1 = pairwise_col_diff(x1)
z2 = pairwise_col_diff(x2)
w = compute_weights(z1, z2)
alpha = 0.1
s = "lambda.min"
cpop1_features = cpop1_iterate(z1 = z1, z2 = z2, y1 = y1, y2 = y2, w = w,
family = "binomial", alpha = 0.1)$cpop1_features
cpop2_result = cpop2_sign(z1 = z1, z2 = z2, y1 = y1, y2 = y2,
cpop1_features = cpop1_features, family = "binomial")
data(cpop_data_binary, package = 'CPOP')
z1 = pairwise_col_diff(x1)
z2 = pairwise_col_diff(x2)
w = compute_weights(z1, z2)
alpha = c(1, 0.1, 0.01)
cpop1_features = cpop1_iterate(z1 = z1, z2 = z2, y1 = y1, y2 = y2, w = w,
family = "binomial", alpha = 0.1)$cpop1_features
cpop2_result = cpop2_mag(z1, z2, y1, y2,
cpop1_features = cpop1_features, s = "lambda.min", nIter = 20, family = "binomial")
}
