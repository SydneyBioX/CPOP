% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_ratio_network.R
\name{plot_ratio_network}
\alias{plot_ratio_network}
\title{Plot ratio network}
\usage{
plot_ratio_network(x, nodesData = FALSE, stat_df = NULL)
}
\arguments{
\item{x}{The output of top1 or top2 or get_lasso_coef}

\item{nodesData}{Logical}

\item{stat_df}{stat_df}
}
\description{
Plot ratio network
}
\examples{
x = c("X1--X2","X1--X3","X1--X4","X1--X5","X1--X6","X1--X7","X1--X8",
"X1--X9","X1--X10","X2--X3","X2--X4","X2--X5","X2--X6","X2--X7",
"X2--X8","X2--X9","X2--X10","X3--X4","X3--X7","X3--X8","X3--X9",
"X4--X5","X4--X7","X4--X9","X5--X10","X7--X8","X7--X9","X8--X9")
plot_ratio_network(x, nodesData = FALSE)
plot_ratio_network(x, nodesData = TRUE)
set.seed(1)
n = 100
p = 10
x1 = matrix(rnorm(n * p, mean = 0, sd = 1), nrow = n, ncol = p)
x2 = x1 + 0.1
colnames(x1) = colnames(x2) = paste0("X", 1:p)
k = 2
beta = c(rep(c(-1, 1), length.out = k), rep(0, p - k))
expit = function(x) 1/(1+exp(-x))
y1 = rbinom(n, 1, prob = expit(x1 \%*\% beta))
y2 = rbinom(n, 1, prob = expit(x2 \%*\% beta))
z1 = pairwise_col_diff(x1)
z2 = pairwise_col_diff(x2)
w = compute_weights(z1, z2)
top_model_result = top_model(z1, z2, y1, y2, w = w,
alpha = 1, n_features = 40, s = "lambda.min")
top_model_coef = get_lasso_coef(lassoObj = top_model_result$en1, s = "lambda.min", tibble = TRUE)
stat_df = tibble::tibble(
id = colnames(x1),
stat = beta,
size = 10*abs(stat),
color = ifelse(stat < 0, "blue", "red"),
font.size = ifelse(abs(stat) <= 0.5, 30, 60),
title = signif(stat, 2)
)
plot_ratio_network(x = top_model_coef, stat_df = stat_df)
}
